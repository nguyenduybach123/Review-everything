<UserControl x:Class="Review_Project.MVVM.View.UserControlView.PostContentEditorUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Review_Project.MVVM.View.UserControlView"
             xmlns:viewModel="clr-namespace:Review_Project.MVVM.ViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="700"
             Name="postEditorUC">

    <UserControl.Resources>
        <Style x:Key="btnClose" TargetType="Button">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Background" Value="#333333"></Setter>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10" Background="{TemplateBinding Background}"
                                Width="35" Height="35">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.5"></DropShadowEffect>
                            </Border.Effect>
                            
                            <ContentControl Background="Transparent">
                                <materialDesign:PackIcon Kind="WindowClose" Width="30" Height="30"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center">
                                </materialDesign:PackIcon>
                            </ContentControl>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#cccccc"></Setter>
                </Trigger>
            </Style.Triggers>
            
        </Style>
    </UserControl.Resources>

    <UserControl.DataContext>
        <viewModel:PostContentEditorViewModel></viewModel:PostContentEditorViewModel>
    </UserControl.DataContext>
    
    <Border CornerRadius="20" Background="#333333" 
            Padding="10" Margin="10">

        <!--<Border.Clip>
            <RectangleGeometry RadiusX="15" RadiusY="15" Rect="0,0,1000,200"></RectangleGeometry>
        </Border.Clip>-->

        <Border.Effect>
            <DropShadowEffect></DropShadowEffect>
        </Border.Effect>
        
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="45"></RowDefinition>
                <RowDefinition Height="70"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Button x:Name="btnClose"
                        Margin="5" Style="{StaticResource btnClose}"
                        HorizontalAlignment="Right" VerticalAlignment="Center"
                        Command="{Binding SubmitCloseEditorButtonCommand}" CommandParameter="{Binding ElementName=postEditorUC}">
                </Button>
            </Grid>
            
            <Grid Grid.Row="1">
                <Border CornerRadius="15" Background="White" 
                        Padding="5" Margin="0,5,0,10">
                    <ToolBarTray Background="Transparent" 
                                 HorizontalAlignment="Center" VerticalAlignment="Center">
                        <ToolBar ClipToBounds="False" Style="{StaticResource MaterialDesignToolBar}" Width="800" 
                                 >

                            <Button
                                  Command="{Binding SubmitMediaButtonCommand}" CommandParameter="{Binding ElementName=postEditorUC}"
                                  x:Name="btnMedia"
                                  Content="{materialDesign:PackIcon Kind=ImageSizeSelectActual}"
                                  ToolBar.OverflowMode="AsNeeded"
                                  ToolTip="Cut" />

                            <Button
                                  Command="Cut"
                                  Content="{materialDesign:PackIcon Kind=ContentCut}"
                                  ToolBar.OverflowMode="AsNeeded"
                                  ToolTip="Cut" />
                    
                            <Button
                                  Command="Copy"
                                  Content="{materialDesign:PackIcon Kind=ContentCopy}"
                                  ToolBar.OverflowMode="AsNeeded"
                                  ToolTip="Copy that stuff" />
                    
                            <Separator />
                            <Button
                                  Command="Paste"
                                  Content="{materialDesign:PackIcon Kind=ContentPaste}"
                                  ToolBar.OverflowMode="AsNeeded"
                                  ToolTip="Paste some stuff" />


                            <Separator />
                            <ListBox SelectedIndex="0">
                            
                                <ListBoxItem x:Name="boxAlignLeft" Content="{materialDesign:PackIcon Kind=FormatAlignLeft}" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Selected">
                                            <i:InvokeCommandAction Command="{Binding SubmitAlignLeftSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unselected">
                                            <i:InvokeCommandAction Command="{Binding SubmitUnselectAlignCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBoxItem>

                                <ListBoxItem x:Name="boxAlignCenter" Content="{materialDesign:PackIcon Kind=FormatAlignCenter}" >
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Selected">
                                            <i:InvokeCommandAction Command="{Binding SubmitAlignCenterSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unselected">
                                            <i:InvokeCommandAction Command="{Binding SubmitUnselectAlignCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBoxItem>

                                <ListBoxItem x:Name="boxAlignRight" Content="{materialDesign:PackIcon Kind=FormatAlignRight}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Selected">
                                            <i:InvokeCommandAction Command="{Binding SubmitAlignRightSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unselected">
                                            <i:InvokeCommandAction Command="{Binding SubmitUnselectAlignCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBoxItem>
                            </ListBox>
                            <Separator />
                            <ListBox SelectionMode="Extended">
                                <ListBox.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="MaterialDesignToolToggleListBox" />
                                        <TextBlock Text="Multiple selection" />
                                        <TextBlock Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                                    </StackPanel>
                                </ListBox.ToolTip>
                            
                                <ListBoxItem Name="boxBold" Content="{materialDesign:PackIcon Kind=FormatBold}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Selected">
                                            <i:InvokeCommandAction Command="{Binding SubmitBoldSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unselected">
                                            <i:InvokeCommandAction Command="{Binding SubmitBoldSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBoxItem>

                                <ListBoxItem Name="boxItalic" Content="{materialDesign:PackIcon Kind=FormatItalic}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Selected">
                                            <i:InvokeCommandAction Command="{Binding SubmitItalicSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unselected">
                                            <i:InvokeCommandAction Command="{Binding SubmitItalicSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBoxItem>

                                <ListBoxItem Name="boxUnderline" Content="{materialDesign:PackIcon Kind=FormatUnderline}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Selected">
                                            <i:InvokeCommandAction Command="{Binding SubmitUnderlineSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Unselected">
                                            <i:InvokeCommandAction Command="{Binding SubmitUnderlineSelectionCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBoxItem>
                            
                            </ListBox>
                            <Separator />
                            <Label VerticalAlignment="Center"
                                   Content="Font size:" />
                            <ComboBox x:Name="cbxFontSize"> 
                            
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectedChangedFontSizeCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <ComboBoxItem Content="10" />
                                <ComboBoxItem Content="12"
                                              IsSelected="True" />
                                <ComboBoxItem Content="14" />
                                <ComboBoxItem Content="16" />
                            </ComboBox>

                            <ToggleButton />
                        </ToolBar>
                    </ToolBarTray>
                </Border>    
            </Grid>


            <Grid Grid.Row="2">
                <ScrollViewer Height="300">
                    <StackPanel>
                        <TextBox   Name="txtTitle"
                                   Padding="10" Margin="0,10,0,10"  FontSize="18"
                                   materialDesign:TextFieldAssist.UnderlineBrush="White"
                                   materialDesign:HintAssist.Hint="Tiêu Đề" Foreground="White"></TextBox>

                        <RichTextBox  x:Name="postContent"
                                      Padding="10" Margin="0,10,0,10" FontSize="14"
                                      materialDesign:TextFieldAssist.UnderlineBrush="White"
                                      materialDesign:HintAssist.Hint="Nội Dung" Foreground="White"
                                      Height="150">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction Command="{Binding TextChangedContentCommand}" CommandParameter="{Binding ElementName=postEditorUC}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </RichTextBox>
                        
                        <Button Visibility="Collapsed" HorizontalAlignment="Right" Margin="0,0,20,10"
                                Command="{Binding SubmitSeeButtonCommand}" CommandParameter="{Binding ElementName=postEditorUC}">Xem</Button>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
            
            
            
        </Grid>            
    </Border>
</UserControl>
